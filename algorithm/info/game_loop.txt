------------
Basics:
------------
When the user chooses to play a game, a new ticket will be randomly 
generated and the user will then select three numbers, select a 
line, and receive a reward.

------------
Setting up the game
------------
First, the game randomly generates a new ticket.

The output should include:
	-a two-dimensional array representing the ticket
		-Every integer 1 - 9 should appear in the array once, 
		and only once.
		-The array should be 3x3
	-a parallel array representing the revealed cells
		-Exactly one spot in the array should be "revealed"
		-All other spots in the array should be "not revealed"

------------
Begin the game
------------
To begin, the ticket is displayed to the screen. Then, instructional text is 
printed to the screen, and the player enters three strings in the range A1 - C3. 
If the player enters a string that is outside that range, for example, "A0", "D1", 
or "B4", then it is rejected and the player is asked to enter that value again.

Consider this the algorithm for the "beginGame" function.

Step 1: Display ticket
Step 2: Print "Please enter the row# and col3 of the cell you want to reveal"
Step 3:
	Until 3 new values have been revealed:
		1.Prompt user for new value.
		2. Check the entered value to see if matches any of the following strings:
			"A1, A2, A3, B1, B2, B3, C1, C2, C3"
			If it doesn't match, reject the value and tell the player to try again
		3. Check to see if the entered value is already revealed.
			if it is already revealed, reject the value and tells the player to try again
		4. Change the corresponding value in the revealed array to "true"
		5. Print the ticket again

------------
Select a line
------------
Next, the player selects one of eight lines ─ vertical, horizontal, 
or diagonal. Each "line" represents a set of three numbers, and 
it should be clearly numbered from 1 to 8.

Once the player has selected a line, all its numbers are uncovered 
and the player is awarded Gold Point Rewards based on the sum of the 
line chosen, using the Payout table.

Consider this the algorithm for the "selectLine" function

Step 1:
	Display ticket
Step 2:
	1. Print: "Please select from one of the following lines, (1-8):"
	2. Print "Line 1: Row 1 /nLine 2: Row 2/nLine 3: Row 3"
	3. Print "Line 4: A1, B2, C3/n"
	4. Print "Line 5: Col A /nLine 6: Col B/nLine 7: Col C"
	5. Print "Line 8: "A3, B2, C3"
Step 3: 
	Prompt the player to select a line.
Step 4:
	If the player entered anything that was not an integer between 1 and 8, repeat from step 3 until they enter something valid
Step 5:
	reveal each cell in the line, based on the integer entered
------
Reveal a line
------
Based on an integer, "line":
If line == 1, 2, or 3:
	For each col in ticket array:
		change spot [line - 1][col] in revealed array to true
If line == 4:
	change spots [0][0], [1][1], and [2][2] in revealed array to true
if line == 5, 6, 7:
	For each row in ticket array:
		change spot [row][line - 5] in revealed array to true
if line == 8:
	change spots [0][2], [1][1], and [2][0] in revealed array to true

------
Award gold points
------
Based on an integer, "line", and assuming a variable "total"

If line == 1, 2, or 3:
	For each col in ticket array:
		add value in spot [line - 1][col] in ticket array to total
If line == 4:
	add values in spots [0][0], [1][1], and [2][2] in ticket array to total
if line == 5, 6, 7:
	For each row in ticket array:
		add value in spot [row][line - 5] in ticket array to total
if line == 8:
	add values in spots [0][2], [1][1], and [2][0] in ticket array to total

Based on the value of "total", refer to payout table and award gold points.(TODO)

------------
End the game
------------
At the end of each game, the system will read in the score stored in 
“highscore.txt”.

Step 1: Try to open highscore.txt for reading
Step 2:	if a line can be read from highscore.txt(use getline):
		read another line from highscore.txt into a variable, "oldScore"
Step 3: close highscore.txt
Step 3: if newScore > oldScore:
	1. open highscore.txt for writing
	2. Prompt player to enter their name(use getline):
	3. print the name to the file
	4. Print the score to the file
	5. Close highscore.txt
	6. Print: "New High score: <score>", where "<score>" is "newScore"
Step 4: Print: "/n/nGame Over./n/n";
Step 5: Pause the system.
